{"ast":null,"code":"import { createErrorClass } from './createErrorClass';\nexport var EmptyError = createErrorClass(function (_super) {\n  return function EmptyErrorImpl() {\n    _super(this);\n    this.name = 'EmptyError';\n    this.message = 'no elements in sequence';\n  };\n});","map":{"version":3,"names":["createErrorClass","EmptyError","_super","EmptyErrorImpl","name","message"],"sources":["C:\\Users\\sonbx\\Chess_Game\\chess_frontend\\node_modules\\rxjs\\src\\internal\\util\\EmptyError.ts"],"sourcesContent":["import { createErrorClass } from './createErrorClass';\r\n\r\nexport interface EmptyError extends Error {}\r\n\r\nexport interface EmptyErrorCtor {\r\n  /**\r\n   * @deprecated Internal implementation detail. Do not construct error instances.\r\n   * Cannot be tagged as internal: https://github.com/ReactiveX/rxjs/issues/6269\r\n   */\r\n  new (): EmptyError;\r\n}\r\n\r\n/**\r\n * An error thrown when an Observable or a sequence was queried but has no\r\n * elements.\r\n *\r\n * @see {@link first}\r\n * @see {@link last}\r\n * @see {@link single}\r\n * @see {@link firstValueFrom}\r\n * @see {@link lastValueFrom}\r\n */\r\nexport const EmptyError: EmptyErrorCtor = createErrorClass(\r\n  (_super) =>\r\n    function EmptyErrorImpl(this: any) {\r\n      _super(this);\r\n      this.name = 'EmptyError';\r\n      this.message = 'no elements in sequence';\r\n    }\r\n);\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAsBrD,OAAO,IAAMC,UAAU,GAAmBD,gBAAgB,CACxD,UAACE,MAAM;EACL,gBAASC,cAAcA,CAAA;IACrBD,MAAM,CAAC,IAAI,CAAC;IACZ,IAAI,CAACE,IAAI,GAAG,YAAY;IACxB,IAAI,CAACC,OAAO,GAAG,yBAAyB;EAC1C,CAAC;AAJD,CAIC,CACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}