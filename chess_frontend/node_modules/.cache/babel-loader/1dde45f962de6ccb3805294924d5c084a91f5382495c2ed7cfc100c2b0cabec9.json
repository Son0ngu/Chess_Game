{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonbx\\\\Chess_Game\\\\chess_frontend\\\\src\\\\components\\\\BoardRow.jsx\";\nimport React from 'react';\nimport Square from './Square';\nimport Piece from './Piece';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardRow = ({\n  rowIndex,\n  cols,\n  board,\n  isFlipped,\n  playerColor,\n  disabled,\n  coordsToAlgebraic,\n  position,\n  handleSquareClick,\n  handleDrop,\n  isPossibleMovePosition\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-row\",\n    children: cols.map(col => {\n      const isLightSquare = (rowIndex + col) % 2 === 0;\n      const algebraicPosition = coordsToAlgebraic(isFlipped ? 7 - rowIndex : rowIndex, isFlipped ? 7 - col : col);\n      const piece = board[isFlipped ? 7 - rowIndex : rowIndex][isFlipped ? 7 - col : col];\n      const isCheck = position && position.inCheck && piece && piece.type === 'king' && piece.color === position.inCheck;\n      return /*#__PURE__*/_jsxDEV(Square, {\n        position: algebraicPosition,\n        color: isLightSquare ? 'light' : 'dark',\n        onDrop: handleDrop,\n        onClick: handleSquareClick,\n        isPossibleMove: isPossibleMovePosition(algebraicPosition),\n        isCheck: isCheck,\n        children: piece && /*#__PURE__*/_jsxDEV(Piece, {\n          piece: piece,\n          position: algebraicPosition,\n          canDrag: !disabled && piece.color === playerColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 15\n        }, this)\n      }, col, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n_c = BoardRow;\nexport default BoardRow;\nvar _c;\n$RefreshReg$(_c, \"BoardRow\");","map":{"version":3,"names":["React","Square","Piece","jsxDEV","_jsxDEV","BoardRow","rowIndex","cols","board","isFlipped","playerColor","disabled","coordsToAlgebraic","position","handleSquareClick","handleDrop","isPossibleMovePosition","className","children","map","col","isLightSquare","algebraicPosition","piece","isCheck","inCheck","type","color","onDrop","onClick","isPossibleMove","canDrag","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonbx/Chess_Game/chess_frontend/src/components/BoardRow.jsx"],"sourcesContent":["import React from 'react';\r\nimport Square from './Square';\r\nimport Piece from './Piece';\r\n\r\nconst BoardRow = ({ \r\n  rowIndex, \r\n  cols, \r\n  board, \r\n  isFlipped,\r\n  playerColor,\r\n  disabled,\r\n  coordsToAlgebraic,\r\n  position,\r\n  handleSquareClick,\r\n  handleDrop,\r\n  isPossibleMovePosition \r\n}) => {\r\n  \r\n  return (\r\n    <div className=\"board-row\">\r\n      {cols.map(col => {\r\n        const isLightSquare = (rowIndex + col) % 2 === 0;\r\n        const algebraicPosition = coordsToAlgebraic(isFlipped ? 7 - rowIndex : rowIndex, isFlipped ? 7 - col : col);\r\n        const piece = board[isFlipped ? 7 - rowIndex : rowIndex][isFlipped ? 7 - col : col];\r\n        const isCheck = position && position.inCheck && piece && piece.type === 'king' && piece.color === position.inCheck;\r\n        \r\n        return (\r\n          <Square\r\n            key={col}\r\n            position={algebraicPosition}\r\n            color={isLightSquare ? 'light' : 'dark'}\r\n            onDrop={handleDrop}\r\n            onClick={handleSquareClick}\r\n            isPossibleMove={isPossibleMovePosition(algebraicPosition)}\r\n            isCheck={isCheck}\r\n          >\r\n            {piece && (\r\n              <Piece\r\n                piece={piece}\r\n                position={algebraicPosition}\r\n                canDrag={!disabled && piece.color === playerColor}\r\n              />\r\n            )}\r\n          </Square>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardRow;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,KAAK,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,QAAQ,GAAGA,CAAC;EAChBC,QAAQ;EACRC,IAAI;EACJC,KAAK;EACLC,SAAS;EACTC,WAAW;EACXC,QAAQ;EACRC,iBAAiB;EACjBC,QAAQ;EACRC,iBAAiB;EACjBC,UAAU;EACVC;AACF,CAAC,KAAK;EAEJ,oBACEZ,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,EACvBX,IAAI,CAACY,GAAG,CAACC,GAAG,IAAI;MACf,MAAMC,aAAa,GAAG,CAACf,QAAQ,GAAGc,GAAG,IAAI,CAAC,KAAK,CAAC;MAChD,MAAME,iBAAiB,GAAGV,iBAAiB,CAACH,SAAS,GAAG,CAAC,GAAGH,QAAQ,GAAGA,QAAQ,EAAEG,SAAS,GAAG,CAAC,GAAGW,GAAG,GAAGA,GAAG,CAAC;MAC3G,MAAMG,KAAK,GAAGf,KAAK,CAACC,SAAS,GAAG,CAAC,GAAGH,QAAQ,GAAGA,QAAQ,CAAC,CAACG,SAAS,GAAG,CAAC,GAAGW,GAAG,GAAGA,GAAG,CAAC;MACnF,MAAMI,OAAO,GAAGX,QAAQ,IAAIA,QAAQ,CAACY,OAAO,IAAIF,KAAK,IAAIA,KAAK,CAACG,IAAI,KAAK,MAAM,IAAIH,KAAK,CAACI,KAAK,KAAKd,QAAQ,CAACY,OAAO;MAElH,oBACErB,OAAA,CAACH,MAAM;QAELY,QAAQ,EAAES,iBAAkB;QAC5BK,KAAK,EAAEN,aAAa,GAAG,OAAO,GAAG,MAAO;QACxCO,MAAM,EAAEb,UAAW;QACnBc,OAAO,EAAEf,iBAAkB;QAC3BgB,cAAc,EAAEd,sBAAsB,CAACM,iBAAiB,CAAE;QAC1DE,OAAO,EAAEA,OAAQ;QAAAN,QAAA,EAEhBK,KAAK,iBACJnB,OAAA,CAACF,KAAK;UACJqB,KAAK,EAAEA,KAAM;UACbV,QAAQ,EAAES,iBAAkB;UAC5BS,OAAO,EAAE,CAACpB,QAAQ,IAAIY,KAAK,CAACI,KAAK,KAAKjB;QAAY;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD;MACF,GAdIf,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAeF,CAAC;IAEb,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA5CI/B,QAAQ;AA8Cd,eAAeA,QAAQ;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}