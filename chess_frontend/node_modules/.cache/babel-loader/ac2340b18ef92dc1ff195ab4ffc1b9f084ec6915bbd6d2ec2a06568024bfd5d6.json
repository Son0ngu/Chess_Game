{"ast":null,"code":"var _jsxFileName = \"/home/sonbx/Documents/Project/Chess_Game/chess_frontend/src/components/MoveHistory.jsx\";\nimport React from 'react';\nimport '../styles/MoveHistory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoveHistory = ({\n  moves = []\n}) => {\n  // Format move for display (e.g., \"e2-e4\", \"Nf3\", \"O-O\")\n  const formatMove = move => {\n    if (!move) return '';\n\n    // Special case for castling\n    if (move.castling) {\n      return move.castling === 'kingside' ? 'O-O' : 'O-O-O';\n    }\n\n    // For captures\n    if (move.capture) {\n      const pieceSymbol = getPieceSymbol(move.piece);\n      return `${pieceSymbol}${move.from.slice(0, 1)}x${move.to}`;\n    }\n\n    // For regular moves\n    const pieceSymbol = getPieceSymbol(move.piece);\n    return `${pieceSymbol}${move.from}-${move.to}`;\n  };\n\n  // Get the symbol for a piece\n  const getPieceSymbol = piece => {\n    if (!piece || piece === 'pawn') return '';\n    const symbols = {\n      'knight': 'N',\n      'bishop': 'B',\n      'rook': 'R',\n      'queen': 'Q',\n      'king': 'K'\n    };\n    return symbols[piece] || '';\n  };\n\n  // Group moves by pairs (white and black)\n  const groupMovesInPairs = moves => {\n    return moves.reduce((pairs, move, index) => {\n      const pairIndex = Math.floor(index / 2);\n      if (!pairs[pairIndex]) {\n        pairs[pairIndex] = {\n          white: null,\n          black: null\n        };\n      }\n      if (index % 2 === 0) {\n        pairs[pairIndex].white = move;\n      } else {\n        pairs[pairIndex].black = move;\n      }\n      return pairs;\n    }, []);\n  };\n  const movePairs = groupMovesInPairs(moves);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"move-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Move History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"move-list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"White\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: movePairs.map((pair, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"move-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"move white-move\",\n              children: formatMove(pair.white)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"move black-move\",\n              children: formatMove(pair.black)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_c = MoveHistory;\nexport default MoveHistory;\nvar _c;\n$RefreshReg$(_c, \"MoveHistory\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MoveHistory","moves","formatMove","move","castling","capture","pieceSymbol","getPieceSymbol","piece","from","slice","to","symbols","groupMovesInPairs","reduce","pairs","index","pairIndex","Math","floor","white","black","movePairs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pair","_c","$RefreshReg$"],"sources":["/home/sonbx/Documents/Project/Chess_Game/chess_frontend/src/components/MoveHistory.jsx"],"sourcesContent":["import React from 'react';\nimport '../styles/MoveHistory.css';\n\nconst MoveHistory = ({ moves = [] }) => {\n  // Format move for display (e.g., \"e2-e4\", \"Nf3\", \"O-O\")\n  const formatMove = (move) => {\n    if (!move) return '';\n    \n    // Special case for castling\n    if (move.castling) {\n      return move.castling === 'kingside' ? 'O-O' : 'O-O-O';\n    }\n    \n    // For captures\n    if (move.capture) {\n      const pieceSymbol = getPieceSymbol(move.piece);\n      return `${pieceSymbol}${move.from.slice(0, 1)}x${move.to}`;\n    }\n    \n    // For regular moves\n    const pieceSymbol = getPieceSymbol(move.piece);\n    return `${pieceSymbol}${move.from}-${move.to}`;\n  };\n  \n  // Get the symbol for a piece\n  const getPieceSymbol = (piece) => {\n    if (!piece || piece === 'pawn') return '';\n    const symbols = {\n      'knight': 'N',\n      'bishop': 'B',\n      'rook': 'R',\n      'queen': 'Q',\n      'king': 'K'\n    };\n    return symbols[piece] || '';\n  };\n\n  // Group moves by pairs (white and black)\n  const groupMovesInPairs = (moves) => {\n    return moves.reduce((pairs, move, index) => {\n      const pairIndex = Math.floor(index / 2);\n      \n      if (!pairs[pairIndex]) {\n        pairs[pairIndex] = { white: null, black: null };\n      }\n      \n      if (index % 2 === 0) {\n        pairs[pairIndex].white = move;\n      } else {\n        pairs[pairIndex].black = move;\n      }\n      \n      return pairs;\n    }, []);\n  };\n\n  const movePairs = groupMovesInPairs(moves);\n\n  return (\n    <div className=\"move-history\">\n      <h3>Move History</h3>\n      <div className=\"move-list\">\n        <table>\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>White</th>\n              <th>Black</th>\n            </tr>\n          </thead>\n          <tbody>\n            {movePairs.map((pair, index) => (\n              <tr key={index}>\n                <td className=\"move-number\">{index + 1}.</td>\n                <td className=\"move white-move\">{formatMove(pair.white)}</td>\n                <td className=\"move black-move\">{formatMove(pair.black)}</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default MoveHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}