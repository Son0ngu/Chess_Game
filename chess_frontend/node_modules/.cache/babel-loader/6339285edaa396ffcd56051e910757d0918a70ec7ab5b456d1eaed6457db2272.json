{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonbx\\\\Chess_Game\\\\chess_frontend\\\\src\\\\context\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { getToken, setToken, removeToken, getUserId, setUserId, removeUserId } from '../utils/storage';\n\n// API base URL - match your backend port\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000/api\";\n\n// Create context\nconst AuthContext = /*#__PURE__*/createContext(null);\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Check for existing token on initial load\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const token = getToken();\n      if (token) {\n        try {\n          // Configure axios to use the token\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Fetch user profile\n          const response = await axios.get(`${API_URL}/users/me`);\n          if (response.data) {\n            setUser(response.data);\n            setIsAuthenticated(true);\n          }\n        } catch (error) {\n          console.error(\"Error validating token:\", error);\n          // Invalid or expired token\n          logout();\n        }\n      }\n      setIsLoading(false);\n    };\n    initializeAuth();\n  }, []);\n\n  // Login function\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      setIsLoading(true);\n      const response = await axios.post(`${API_URL}/users/login`, {\n        email,\n        password\n      });\n      const {\n        token,\n        user: userData\n      } = response.data;\n\n      // Save token and user ID to storage\n      setToken(token);\n      setUserId(userData.id);\n\n      // Set authorization header\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Update state\n      setUser(userData);\n      setIsAuthenticated(true);\n      return userData;\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Login failed. Please check your credentials.\";\n      setError(message);\n      throw new Error(message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Register function\n  const register = async (username, email, password) => {\n    try {\n      setError(null);\n      setIsLoading(true);\n      const response = await axios.post(`${API_URL}/users/register`, {\n        username,\n        email,\n        password\n      });\n      return response.data;\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || \"Registration failed. Please try again.\";\n      setError(message);\n      throw new Error(message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Logout function\n  const logout = () => {\n    // Remove token from storage\n    removeToken();\n    removeUserId();\n\n    // Remove authorization header\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Update state\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n\n  // Update user profile\n  const updateProfile = async userData => {\n    try {\n      setIsLoading(true);\n      const response = await axios.put(`${API_URL}/users/profile`, userData);\n      if (response.data) {\n        setUser({\n          ...user,\n          ...response.data\n        });\n      }\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.error) || \"Failed to update profile.\";\n      setError(message);\n      throw new Error(message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Context value\n  const value = {\n    user,\n    isAuthenticated,\n    isLoading,\n    error,\n    login,\n    logout,\n    register,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use the auth context\n_s(AuthProvider, \"FjMZAxZvphMxP/TGOt3ewSdLoU4=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","getToken","setToken","removeToken","getUserId","setUserId","removeUserId","jsxDEV","_jsxDEV","API_URL","AuthContext","AuthProvider","children","_s","user","setUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","error","setError","initializeAuth","token","defaults","headers","common","response","get","data","console","logout","login","email","password","post","userData","id","_error$response","_error$response$data","message","Error","register","username","_error$response2","_error$response2$data","updateProfile","put","_error$response3","_error$response3$data","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","$RefreshReg$"],"sources":["C:/Users/sonbx/Chess_Game/chess_frontend/src/context/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { getToken, setToken, removeToken, getUserId, setUserId, removeUserId } from '../utils/storage';\r\n\r\n// API base URL - match your backend port\r\nconst API_URL = \"http://localhost:5000/api\";\r\n\r\n// Create context\r\nconst AuthContext = createContext(null);\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Check for existing token on initial load\r\n  useEffect(() => {\r\n    const initializeAuth = async () => {\r\n      const token = getToken();\r\n      \r\n      if (token) {\r\n        try {\r\n          // Configure axios to use the token\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Fetch user profile\r\n          const response = await axios.get(`${API_URL}/users/me`);\r\n          \r\n          if (response.data) {\r\n            setUser(response.data);\r\n            setIsAuthenticated(true);\r\n          }\r\n        } catch (error) {\r\n          console.error(\"Error validating token:\", error);\r\n          // Invalid or expired token\r\n          logout();\r\n        }\r\n      }\r\n      \r\n      setIsLoading(false);\r\n    };\r\n\r\n    initializeAuth();\r\n  }, []);\r\n\r\n  // Login function\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      setIsLoading(true);\r\n      \r\n      const response = await axios.post(`${API_URL}/users/login`, {\r\n        email,\r\n        password\r\n      });\r\n      \r\n      const { token, user: userData } = response.data;\r\n      \r\n      // Save token and user ID to storage\r\n      setToken(token);\r\n      setUserId(userData.id);\r\n      \r\n      // Set authorization header\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Update state\r\n      setUser(userData);\r\n      setIsAuthenticated(true);\r\n      \r\n      return userData;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || \"Login failed. Please check your credentials.\";\r\n      setError(message);\r\n      throw new Error(message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Register function\r\n  const register = async (username, email, password) => {\r\n    try {\r\n      setError(null);\r\n      setIsLoading(true);\r\n      \r\n      const response = await axios.post(`${API_URL}/users/register`, {\r\n        username,\r\n        email,\r\n        password\r\n      });\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || \"Registration failed. Please try again.\";\r\n      setError(message);\r\n      throw new Error(message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Logout function\r\n  const logout = () => {\r\n    // Remove token from storage\r\n    removeToken();\r\n    removeUserId();\r\n    \r\n    // Remove authorization header\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    \r\n    // Update state\r\n    setUser(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n\r\n  // Update user profile\r\n  const updateProfile = async (userData) => {\r\n    try {\r\n      setIsLoading(true);\r\n      const response = await axios.put(`${API_URL}/users/profile`, userData);\r\n      \r\n      if (response.data) {\r\n        setUser({...user, ...response.data});\r\n      }\r\n      \r\n      return response.data;\r\n    } catch (error) {\r\n      const message = error.response?.data?.error || \"Failed to update profile.\";\r\n      setError(message);\r\n      throw new Error(message);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  // Context value\r\n  const value = {\r\n    user,\r\n    isAuthenticated,\r\n    isLoading,\r\n    error,\r\n    login,\r\n    logout,\r\n    register,\r\n    updateProfile\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\n// Custom hook to use the auth context\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  \r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  \r\n  return context;\r\n};\r\n\r\nexport default AuthContext;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}