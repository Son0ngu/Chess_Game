{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Chess_Game\\\\chess_frontend\\\\src\\\\pages\\\\ResetPW.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"../styles/Signin.css\"; // reuse luôn Signin.css\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = \"http://localhost:5000\"; // Backend URL\n\nconst ResetPassword = () => {\n  _s();\n  const {\n    token\n  } = useParams(); // lấy token từ URL\n  const navigate = useNavigate();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [serverMessage, setServerMessage] = useState({\n    type: \"\",\n    text: \"\"\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!password) {\n      newErrors.password = \"Password is required\";\n    } else if (password.length < 6) {\n      newErrors.password = \"Password must be at least 6 characters\";\n    }\n    if (password !== confirmPassword) {\n      newErrors.confirmPassword = \"Passwords do not match\";\n    }\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) return;\n    setIsLoading(true);\n    setServerMessage({\n      type: \"\",\n      text: \"\"\n    });\n    try {\n      const response = await axios.post(`${API_URL}/auth/reset-password/${token}`, {\n        password\n      });\n      if (response.data && response.data.message) {\n        setServerMessage({\n          type: \"success\",\n          text: response.data.message\n        });\n        setTimeout(() => navigate(\"/signin\"), 2000); // về trang đăng nhập sau 2s\n      } else {\n        throw new Error(\"Invalid response\");\n      }\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error(\"Reset password error:\", error);\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || \"Reset failed. Try again.\";\n      setServerMessage({\n        type: \"error\",\n        text: errorMessage\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Reset Your Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), errors.password && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Confirm New Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), errors.confirmPassword && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: errors.confirmPassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 38\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), serverMessage.text && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${serverMessage.type}`,\n        children: serverMessage.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? \"Resetting...\" : \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ResetPassword, \"zlns8IEesXLRUNdT0plWqucBd+Q=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["React","useState","useNavigate","useParams","axios","jsxDEV","_jsxDEV","API_URL","ResetPassword","_s","token","navigate","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","serverMessage","setServerMessage","type","text","isLoading","setIsLoading","validateForm","newErrors","length","Object","keys","handleSubmit","e","preventDefault","response","post","data","message","setTimeout","Error","error","_error$response","_error$response$data","console","errorMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","value","onChange","target","required","disabled","_c","$RefreshReg$"],"sources":["D:/Code/Chess_Game/chess_frontend/src/pages/ResetPW.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"../styles/Signin.css\"; // reuse luôn Signin.css\r\n\r\nconst API_URL = \"http://localhost:5000\"; // Backend URL\r\n\r\nconst ResetPassword = () => {\r\n  const { token } = useParams(); // lấy token từ URL\r\n  const navigate = useNavigate();\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n  const [serverMessage, setServerMessage] = useState({ type: \"\", text: \"\" });\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    if (!password) {\r\n      newErrors.password = \"Password is required\";\r\n    } else if (password.length < 6) {\r\n      newErrors.password = \"Password must be at least 6 characters\";\r\n    }\r\n    if (password !== confirmPassword) {\r\n      newErrors.confirmPassword = \"Passwords do not match\";\r\n    }\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    setIsLoading(true);\r\n    setServerMessage({ type: \"\", text: \"\" });\r\n\r\n    try {\r\n      const response = await axios.post(`${API_URL}/auth/reset-password/${token}`, { password });\r\n\r\n      if (response.data && response.data.message) {\r\n        setServerMessage({ type: \"success\", text: response.data.message });\r\n        setTimeout(() => navigate(\"/signin\"), 2000); // về trang đăng nhập sau 2s\r\n      } else {\r\n        throw new Error(\"Invalid response\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Reset password error:\", error);\r\n      const errorMessage = error.response?.data?.error || \"Reset failed. Try again.\";\r\n      setServerMessage({ type: \"error\", text: errorMessage });\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin-container\">\r\n      <h2>Reset Your Password</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label>New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          {errors.password && <span className=\"error\">{errors.password}</span>}\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label>Confirm New Password:</label>\r\n          <input\r\n            type=\"password\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            required\r\n          />\r\n          {errors.confirmPassword && <span className=\"error\">{errors.confirmPassword}</span>}\r\n        </div>\r\n        {serverMessage.text && (\r\n          <div className={`message ${serverMessage.type}`}>\r\n            {serverMessage.text}\r\n          </div>\r\n        )}\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? \"Resetting...\" : \"Reset Password\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}