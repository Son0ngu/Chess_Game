{"ast":null,"code":"import { io } from 'socket.io-client';\nimport { getToken } from '../utils/storage';\n\n// Base URL for socket connection\nconst SOCKET_URL = 'http://localhost:5000';\n\n// Create socket instance with authentication\nexport const socket = io(SOCKET_URL, {\n  autoConnect: false,\n  auth: {\n    token: getToken\n  }\n});\n\n// Connect socket with current token\nexport const connectSocket = () => {\n  if (getToken()) {\n    socket.auth = {\n      token: getToken()\n    };\n    socket.connect();\n  }\n};\n\n// Disconnect socket\nexport const disconnectSocket = () => {\n  socket.disconnect();\n};\n\n// Listen for connection/errors\nsocket.on('connect', () => {\n  console.log('Socket connected');\n});\nsocket.on('connect_error', error => {\n  console.error('Socket connection error:', error.message);\n\n  // If authentication error, handle it\n  if (error.message === 'authentication_error') {\n    console.error('Authentication failed for socket connection');\n  }\n});\nexport default socket;","map":{"version":3,"names":["io","getToken","SOCKET_URL","socket","autoConnect","auth","token","connectSocket","connect","disconnectSocket","disconnect","on","console","log","error","message"],"sources":["E:/ĐH/20242/Secure Web Dev/Project_Chess/Chess_Game/chess_frontend/src/services/socket.js"],"sourcesContent":["import { io } from 'socket.io-client';\r\nimport { getToken } from '../utils/storage';\r\n\r\n// Base URL for socket connection\r\nconst SOCKET_URL = 'http://localhost:5000';\r\n\r\n// Create socket instance with authentication\r\nexport const socket = io(SOCKET_URL, {\r\n  autoConnect: false,\r\n  auth: {\r\n    token: getToken\r\n  }\r\n});\r\n\r\n// Connect socket with current token\r\nexport const connectSocket = () => {\r\n  if (getToken()) {\r\n    socket.auth = { token: getToken() };\r\n    socket.connect();\r\n  }\r\n};\r\n\r\n// Disconnect socket\r\nexport const disconnectSocket = () => {\r\n  socket.disconnect();\r\n};\r\n\r\n// Listen for connection/errors\r\nsocket.on('connect', () => {\r\n  console.log('Socket connected');\r\n\r\n\r\n});\r\n\r\nsocket.on('connect_error', (error) => {\r\n  console.error('Socket connection error:', error.message);\r\n  \r\n  // If authentication error, handle it\r\n  if (error.message === 'authentication_error') {\r\n    console.error('Authentication failed for socket connection');\r\n  }\r\n});\r\n\r\nexport default socket;\r\n"],"mappings":"AAAA,SAASA,EAAE,QAAQ,kBAAkB;AACrC,SAASC,QAAQ,QAAQ,kBAAkB;;AAE3C;AACA,MAAMC,UAAU,GAAG,uBAAuB;;AAE1C;AACA,OAAO,MAAMC,MAAM,GAAGH,EAAE,CAACE,UAAU,EAAE;EACnCE,WAAW,EAAE,KAAK;EAClBC,IAAI,EAAE;IACJC,KAAK,EAAEL;EACT;AACF,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,aAAa,GAAGA,CAAA,KAAM;EACjC,IAAIN,QAAQ,CAAC,CAAC,EAAE;IACdE,MAAM,CAACE,IAAI,GAAG;MAAEC,KAAK,EAAEL,QAAQ,CAAC;IAAE,CAAC;IACnCE,MAAM,CAACK,OAAO,CAAC,CAAC;EAClB;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;EACpCN,MAAM,CAACO,UAAU,CAAC,CAAC;AACrB,CAAC;;AAED;AACAP,MAAM,CAACQ,EAAE,CAAC,SAAS,EAAE,MAAM;EACzBC,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;AAGjC,CAAC,CAAC;AAEFV,MAAM,CAACQ,EAAE,CAAC,eAAe,EAAGG,KAAK,IAAK;EACpCF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAACC,OAAO,CAAC;;EAExD;EACA,IAAID,KAAK,CAACC,OAAO,KAAK,sBAAsB,EAAE;IAC5CH,OAAO,CAACE,KAAK,CAAC,6CAA6C,CAAC;EAC9D;AACF,CAAC,CAAC;AAEF,eAAeX,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}