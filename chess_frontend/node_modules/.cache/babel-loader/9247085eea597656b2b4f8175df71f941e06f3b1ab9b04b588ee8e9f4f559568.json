{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonbx\\\\Chess_Game\\\\chess_frontend\\\\src\\\\components\\\\Board.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { useDrag, useDrop } from 'react-dnd';\nimport '../styles/Board.css';\n\n// Chess piece component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Piece = ({\n  piece,\n  position,\n  canDrag\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'piece',\n    item: {\n      piece,\n      position\n    },\n    canDrag: () => canDrag,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  // Get piece image path from assets folder\n  const getPieceImage = (type, color) => {\n    // Map piece type to correct prefix\n    const piecePrefix = {\n      'king': 'k',\n      'queen': 'q',\n      'rook': 'r',\n      'bishop': 'b',\n      'knight': 'n',\n      'pawn': 'p'\n    };\n\n    // Map color to correct suffix\n    const colorSuffix = color === 'white' ? 'w' : 'b';\n\n    // Format: assets/q_w.png for white queen, assets/b_b.png for black bishop\n    return `/assets/${piecePrefix[type.toLowerCase()]}_${colorSuffix}.png`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `piece ${piece.color} ${piece.type} ${isDragging ? 'dragging' : ''}`,\n    ref: canDrag ? drag : null,\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      backgroundImage: `url(${getPieceImage(piece.type, piece.color)})`,\n      backgroundSize: 'contain',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      width: '100%',\n      height: '100%'\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n// Chess square component\n_s(Piece, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = Piece;\nconst Square = ({\n  position,\n  color,\n  children,\n  onDrop,\n  onClick,\n  isPossibleMove,\n  isCheck\n}) => {\n  _s2();\n  const [, drop] = useDrop({\n    accept: 'piece',\n    drop: item => onDrop(item.position, position)\n  });\n\n  // Create the className for styling\n  const squareClass = ['square', color, isPossibleMove ? 'possible-move' : '', isCheck ? 'check' : ''].filter(Boolean).join(' ');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: squareClass,\n    ref: drop,\n    onClick: () => onClick(position),\n    \"data-position\": position,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n// Main chess board component\n_s2(Square, \"hdmCamxlwL9WeSdzgzIVyaE48AI=\", false, function () {\n  return [useDrop];\n});\n_c2 = Square;\nconst Board = ({\n  board,\n  position,\n  playerColor = 'white',\n  possibleMoves = {},\n  onMove,\n  disabled = false\n}) => {\n  _s3();\n  const [selectedSquare, setSelectedSquare] = useState(null);\n\n  // Convert algebraic notation (e.g., \"e4\") to coordinates [row, col]\n  const algebraicToCoords = useCallback(algebraic => {\n    if (!algebraic || algebraic.length !== 2) return null;\n    const col = algebraic.charCodeAt(0) - 'a'.charCodeAt(0);\n    const row = 8 - parseInt(algebraic[1], 10);\n    return [row, col];\n  }, []);\n\n  // Convert coordinates [row, col] to algebraic notation (e.g., \"e4\")\n  const coordsToAlgebraic = useCallback((row, col) => {\n    if (row < 0 || row > 7 || col < 0 || col > 7) return null;\n    const file = String.fromCharCode('a'.charCodeAt(0) + col);\n    const rank = 8 - row;\n    return `${file}${rank}`;\n  }, []);\n\n  // Handle square click for piece selection or move\n  const handleSquareClick = useCallback(clickedPosition => {\n    if (disabled) return;\n    const coords = algebraicToCoords(clickedPosition);\n    if (!coords) return;\n    const [row, col] = coords;\n    const clickedPiece = board[row][col];\n\n    // If a square was already selected\n    if (selectedSquare) {\n      // If clicking on a different square, try to move the piece\n      if (selectedSquare !== clickedPosition) {\n        onMove(selectedSquare, clickedPosition);\n      }\n      // Clear the selection in any case\n      setSelectedSquare(null);\n    } else if (clickedPiece && clickedPiece.color === playerColor) {\n      // Select the piece if it belongs to the player\n      setSelectedSquare(clickedPosition);\n    }\n  }, [board, selectedSquare, playerColor, onMove, algebraicToCoords, disabled]);\n\n  // Handle piece drop (for drag and drop)\n  const handleDrop = useCallback((fromPosition, toPosition) => {\n    if (disabled) return;\n    onMove(fromPosition, toPosition);\n  }, [onMove, disabled]);\n\n  // Determine if a position has a possible move (for highlighting)\n  const isPossibleMovePosition = useCallback(position => {\n    if (!selectedSquare || !possibleMoves[selectedSquare]) return false;\n    return possibleMoves[selectedSquare].includes(position);\n  }, [selectedSquare, possibleMoves]);\n\n  // Render a chess piece\n\n  // Generate the chess board with proper orientation\n  const renderBoard = () => {\n    const isFlipped = playerColor === 'black';\n    let rows = Array(8).fill(null).map((_, i) => i);\n    let cols = Array(8).fill(null).map((_, i) => i);\n    if (isFlipped) {\n      rows = rows.reverse();\n      cols = cols.reverse();\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chess-board\",\n      children: [rows.map(row => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: cols.map(col => {\n          const isLightSquare = (row + col) % 2 === 0;\n          const algebraicPosition = coordsToAlgebraic(isFlipped ? 7 - row : row, isFlipped ? 7 - col : col);\n          const piece = board[isFlipped ? 7 - row : row][isFlipped ? 7 - col : col];\n          const isCheck = position && position.inCheck && piece && piece.type === 'king' && piece.color === position.inCheck;\n          return /*#__PURE__*/_jsxDEV(Square, {\n            position: algebraicPosition,\n            color: isLightSquare ? 'light' : 'dark',\n            onDrop: handleDrop,\n            onClick: handleSquareClick,\n            isPossibleMove: isPossibleMovePosition(algebraicPosition),\n            isCheck: isCheck,\n            children: piece && /*#__PURE__*/_jsxDEV(Piece, {\n              piece: piece,\n              position: algebraicPosition,\n              canDrag: !disabled && piece.color === playerColor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 21\n            }, this)\n          }, col, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }, this);\n        })\n      }, row, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-coordinates files\",\n        children: isFlipped ? ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'].map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: file\n        }, file, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 66\n        }, this)) : ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'].map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: file\n        }, file, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 66\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-coordinates ranks\",\n        children: isFlipped ? [1, 2, 3, 4, 5, 6, 7, 8].map(rank => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: rank\n        }, rank, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 50\n        }, this)) : [8, 7, 6, 5, 4, 3, 2, 1].map(rank => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: rank\n        }, rank, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 50\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `board-container ${disabled ? 'disabled' : ''}`,\n    children: renderBoard()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 208,\n    columnNumber: 5\n  }, this);\n};\n_s3(Board, \"mW0SDLvCXEqUPOQ7xbpIclWoe8Q=\");\n_c3 = Board;\nexport default Board;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Piece\");\n$RefreshReg$(_c2, \"Square\");\n$RefreshReg$(_c3, \"Board\");","map":{"version":3,"names":["React","useState","useCallback","useDrag","useDrop","jsxDEV","_jsxDEV","Piece","piece","position","canDrag","_s","isDragging","drag","type","item","collect","monitor","getPieceImage","color","piecePrefix","colorSuffix","toLowerCase","className","ref","style","opacity","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","Square","children","onDrop","onClick","isPossibleMove","isCheck","_s2","drop","accept","squareClass","filter","Boolean","join","_c2","Board","board","playerColor","possibleMoves","onMove","disabled","_s3","selectedSquare","setSelectedSquare","algebraicToCoords","algebraic","length","col","charCodeAt","row","parseInt","coordsToAlgebraic","file","String","fromCharCode","rank","handleSquareClick","clickedPosition","coords","clickedPiece","handleDrop","fromPosition","toPosition","isPossibleMovePosition","includes","renderBoard","isFlipped","rows","Array","fill","map","_","i","cols","reverse","isLightSquare","algebraicPosition","inCheck","_c3","$RefreshReg$"],"sources":["C:/Users/sonbx/Chess_Game/chess_frontend/src/components/Board.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport '../styles/Board.css';\r\n\r\n// Chess piece component\r\nconst Piece = ({ piece, position, canDrag }) => {\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'piece',\r\n    item: { piece, position },\r\n    canDrag: () => canDrag,\r\n    collect: monitor => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  // Get piece image path from assets folder\r\n  const getPieceImage = (type, color) => {\r\n    // Map piece type to correct prefix\r\n    const piecePrefix = {\r\n      'king': 'k',\r\n      'queen': 'q',\r\n      'rook': 'r',\r\n      'bishop': 'b',\r\n      'knight': 'n',\r\n      'pawn': 'p'\r\n    };\r\n    \r\n    // Map color to correct suffix\r\n    const colorSuffix = color === 'white' ? 'w' : 'b';\r\n    \r\n    // Format: assets/q_w.png for white queen, assets/b_b.png for black bishop\r\n    return `/assets/${piecePrefix[type.toLowerCase()]}_${colorSuffix}.png`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`piece ${piece.color} ${piece.type} ${isDragging ? 'dragging' : ''}`}\r\n      ref={canDrag ? drag : null}\r\n      style={{ \r\n        opacity: isDragging ? 0.5 : 1,\r\n        backgroundImage: `url(${getPieceImage(piece.type, piece.color)})`,\r\n        backgroundSize: 'contain',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '100%',\r\n        height: '100%'\r\n      }}\r\n    >\r\n      {/* Remove the Unicode symbol, use background image instead */}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Chess square component\r\nconst Square = ({ position, color, children, onDrop, onClick, isPossibleMove, isCheck }) => {\r\n  const [, drop] = useDrop({\r\n    accept: 'piece',\r\n    drop: (item) => onDrop(item.position, position),\r\n  });\r\n\r\n  // Create the className for styling\r\n  const squareClass = [\r\n    'square',\r\n    color,\r\n    isPossibleMove ? 'possible-move' : '',\r\n    isCheck ? 'check' : '',\r\n  ].filter(Boolean).join(' ');\r\n\r\n  return (\r\n    <div\r\n      className={squareClass}\r\n      ref={drop}\r\n      onClick={() => onClick(position)}\r\n      data-position={position}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\n// Main chess board component\r\nconst Board = ({ \r\n  board, \r\n  position, \r\n  playerColor = 'white', \r\n  possibleMoves = {},\r\n  onMove,\r\n  disabled = false \r\n}) => {\r\n  const [selectedSquare, setSelectedSquare] = useState(null);\r\n  \r\n  // Convert algebraic notation (e.g., \"e4\") to coordinates [row, col]\r\n  const algebraicToCoords = useCallback((algebraic) => {\r\n    if (!algebraic || algebraic.length !== 2) return null;\r\n    const col = algebraic.charCodeAt(0) - 'a'.charCodeAt(0);\r\n    const row = 8 - parseInt(algebraic[1], 10);\r\n    return [row, col];\r\n  }, []);\r\n  \r\n  // Convert coordinates [row, col] to algebraic notation (e.g., \"e4\")\r\n  const coordsToAlgebraic = useCallback((row, col) => {\r\n    if (row < 0 || row > 7 || col < 0 || col > 7) return null;\r\n    const file = String.fromCharCode('a'.charCodeAt(0) + col);\r\n    const rank = 8 - row;\r\n    return `${file}${rank}`;\r\n  }, []);\r\n\r\n  // Handle square click for piece selection or move\r\n  const handleSquareClick = useCallback((clickedPosition) => {\r\n    if (disabled) return;\r\n\r\n    const coords = algebraicToCoords(clickedPosition);\r\n    if (!coords) return;\r\n    \r\n    const [row, col] = coords;\r\n    const clickedPiece = board[row][col];\r\n\r\n    // If a square was already selected\r\n    if (selectedSquare) {\r\n      // If clicking on a different square, try to move the piece\r\n      if (selectedSquare !== clickedPosition) {\r\n        onMove(selectedSquare, clickedPosition);\r\n      }\r\n      // Clear the selection in any case\r\n      setSelectedSquare(null);\r\n    } else if (clickedPiece && clickedPiece.color === playerColor) {\r\n      // Select the piece if it belongs to the player\r\n      setSelectedSquare(clickedPosition);\r\n    }\r\n  }, [board, selectedSquare, playerColor, onMove, algebraicToCoords, disabled]);\r\n\r\n  // Handle piece drop (for drag and drop)\r\n  const handleDrop = useCallback((fromPosition, toPosition) => {\r\n    if (disabled) return;\r\n    onMove(fromPosition, toPosition);\r\n  }, [onMove, disabled]);\r\n\r\n  // Determine if a position has a possible move (for highlighting)\r\n  const isPossibleMovePosition = useCallback((position) => {\r\n    if (!selectedSquare || !possibleMoves[selectedSquare]) return false;\r\n    return possibleMoves[selectedSquare].includes(position);\r\n  }, [selectedSquare, possibleMoves]);\r\n\r\n  // Render a chess piece\r\n\r\n  // Generate the chess board with proper orientation\r\n  const renderBoard = () => {\r\n    const isFlipped = playerColor === 'black';\r\n    let rows = Array(8).fill(null).map((_, i) => i);\r\n    let cols = Array(8).fill(null).map((_, i) => i);\r\n    \r\n    if (isFlipped) {\r\n      rows = rows.reverse();\r\n      cols = cols.reverse();\r\n    }\r\n    \r\n    return (\r\n      <div className=\"chess-board\">\r\n        {rows.map(row => (\r\n          <div key={row} className=\"board-row\">\r\n            {cols.map(col => {\r\n              const isLightSquare = (row + col) % 2 === 0;\r\n              const algebraicPosition = coordsToAlgebraic(isFlipped ? 7 - row : row, isFlipped ? 7 - col : col);\r\n              const piece = board[isFlipped ? 7 - row : row][isFlipped ? 7 - col : col];\r\n              const isCheck = position && position.inCheck && piece && piece.type === 'king' && piece.color === position.inCheck;\r\n              \r\n              return (\r\n                <Square\r\n                  key={col}\r\n                  position={algebraicPosition}\r\n                  color={isLightSquare ? 'light' : 'dark'}\r\n                  onDrop={handleDrop}\r\n                  onClick={handleSquareClick}\r\n                  isPossibleMove={isPossibleMovePosition(algebraicPosition)}\r\n                  isCheck={isCheck}\r\n                >\r\n                  {piece && (\r\n                    <Piece\r\n                      piece={piece}\r\n                      position={algebraicPosition}\r\n                      canDrag={!disabled && piece.color === playerColor}\r\n                    />\r\n                  )}\r\n                </Square>\r\n              );\r\n            })}\r\n          </div>\r\n        ))}\r\n        \r\n        {/* Board coordinate labels */}\r\n        <div className=\"board-coordinates files\">\r\n          {isFlipped ? \r\n            ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'].map(file => <div key={file}>{file}</div>) : \r\n            ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'].map(file => <div key={file}>{file}</div>)\r\n          }\r\n        </div>\r\n        <div className=\"board-coordinates ranks\">\r\n          {isFlipped ? \r\n            [1, 2, 3, 4, 5, 6, 7, 8].map(rank => <div key={rank}>{rank}</div>) : \r\n            [8, 7, 6, 5, 4, 3, 2, 1].map(rank => <div key={rank}>{rank}</div>)\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={`board-container ${disabled ? 'disabled' : ''}`}>\r\n      {renderBoard()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Board;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}