{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonbx\\\\Chess_Game\\\\chess_frontend\\\\src\\\\components\\\\BoardCoordinates.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BoardCoordinates = ({\n  type,\n  playerColor\n}) => {\n  const isFlipped = playerColor === 'black';\n  if (type === 'files') {\n    const files = isFlipped ? ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'] : ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-coordinates files\",\n      children: files.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: file\n      }, file, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  } else {\n    const ranks = isFlipped ? [1, 2, 3, 4, 5, 6, 7, 8] : [8, 7, 6, 5, 4, 3, 2, 1];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-coordinates ranks\",\n      children: ranks.map(rank => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: rank\n      }, rank, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n};\n_c = BoardCoordinates;\nexport default BoardCoordinates;\nvar _c;\n$RefreshReg$(_c, \"BoardCoordinates\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BoardCoordinates","type","playerColor","isFlipped","files","className","children","map","file","fileName","_jsxFileName","lineNumber","columnNumber","ranks","rank","_c","$RefreshReg$"],"sources":["C:/Users/sonbx/Chess_Game/chess_frontend/src/components/BoardCoordinates.jsx"],"sourcesContent":["import React from 'react';\r\n\r\nconst BoardCoordinates = ({ type, playerColor }) => {\r\n  const isFlipped = playerColor === 'black';\r\n  \r\n  if (type === 'files') {\r\n    const files = isFlipped ? \r\n      ['h', 'g', 'f', 'e', 'd', 'c', 'b', 'a'] : \r\n      ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\r\n    \r\n    return (\r\n      <div className=\"board-coordinates files\">\r\n        {files.map(file => <div key={file}>{file}</div>)}\r\n      </div>\r\n    );\r\n  } else {\r\n    const ranks = isFlipped ? \r\n      [1, 2, 3, 4, 5, 6, 7, 8] : \r\n      [8, 7, 6, 5, 4, 3, 2, 1];\r\n    \r\n    return (\r\n      <div className=\"board-coordinates ranks\">\r\n        {ranks.map(rank => <div key={rank}>{rank}</div>)}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BoardCoordinates;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,IAAI;EAAEC;AAAY,CAAC,KAAK;EAClD,MAAMC,SAAS,GAAGD,WAAW,KAAK,OAAO;EAEzC,IAAID,IAAI,KAAK,OAAO,EAAE;IACpB,MAAMG,KAAK,GAAGD,SAAS,GACrB,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,GACxC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;IAE1C,oBACEJ,OAAA;MAAKM,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCF,KAAK,CAACG,GAAG,CAACC,IAAI,iBAAIT,OAAA;QAAAO,QAAA,EAAiBE;MAAI,GAAXA,IAAI;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAEV,CAAC,MAAM;IACL,MAAMC,KAAK,GAAGV,SAAS,GACrB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,GACxB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;IAE1B,oBACEJ,OAAA;MAAKM,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCO,KAAK,CAACN,GAAG,CAACO,IAAI,iBAAIf,OAAA;QAAAO,QAAA,EAAiBQ;MAAI,GAAXA,IAAI;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC;EAEV;AACF,CAAC;AAACG,EAAA,GAxBIf,gBAAgB;AA0BtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}