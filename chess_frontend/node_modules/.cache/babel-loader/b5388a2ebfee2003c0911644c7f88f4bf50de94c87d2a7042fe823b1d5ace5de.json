{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code\\\\Chess_Game\\\\chess_frontend\\\\src\\\\components\\\\MoveHistory.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport '../styles/MoveHistory.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoveHistory = ({\n  moves = []\n}) => {\n  _s();\n  // Add debug logging to inspect move data\n  useEffect(() => {\n    console.log(\"Move history data:\", moves);\n  }, [moves]);\n\n  // Format move for display (e.g., \"e2-e4\", \"Nf3\", \"O-O\")\n  const formatMove = move => {\n    if (!move) return '';\n\n    // Special case for castling\n    if (move.castling) {\n      return move.castling === 'kingside' ? 'O-O' : 'O-O-O';\n    }\n\n    // For captures\n    if (move.capture) {\n      const pieceSymbol = getPieceSymbol(move.piece);\n      return `${pieceSymbol}${move.from.slice(0, 1)}x${move.to}`;\n    }\n\n    // For regular moves\n    const pieceSymbol = getPieceSymbol(move.piece);\n    return `${pieceSymbol}${move.from}-${move.to}`;\n  };\n\n  // Get the symbol for a piece\n  const getPieceSymbol = piece => {\n    if (!piece || piece === 'pawn') return '';\n    const symbols = {\n      'knight': 'N',\n      'bishop': 'B',\n      'rook': 'R',\n      'queen': 'Q',\n      'king': 'K'\n    };\n    return symbols[piece] || '';\n  };\n\n  // Much more robust approach to pair moves\n  const createMovePairs = () => {\n    // Make a copy so we don't modify the original\n    const movesCopy = [...moves];\n    const result = [];\n    let currentPairIndex = 0;\n\n    // Create empty pairs for each move number\n    const gameLength = Math.ceil(movesCopy.length / 2);\n    for (let i = 0; i < gameLength; i++) {\n      result.push({\n        white: null,\n        black: null\n      });\n    }\n\n    // First try to use the color property if available\n    let hasColorProperty = movesCopy.length > 0 && 'color' in movesCopy[0];\n    if (hasColorProperty) {\n      // Sort moves by color and move number\n      let moveNumber = 1;\n      let whiteMove = null;\n      for (const move of movesCopy) {\n        if (move.color === 'white') {\n          result[moveNumber - 1].white = move;\n          whiteMove = move;\n        } else if (move.color === 'black') {\n          // If we have a black move, we need to find its pair\n          if (whiteMove) {\n            result[moveNumber - 1].black = move;\n            whiteMove = null;\n            moveNumber++;\n          } else {\n            // Edge case: Black moves first (rare but possible)\n            result[moveNumber - 1].black = move;\n            moveNumber++;\n          }\n        }\n      }\n    } else {\n      // Fallback to alternating colors if color property isn't available\n      for (let i = 0; i < movesCopy.length; i++) {\n        const move = movesCopy[i];\n        const pairIndex = Math.floor(i / 2);\n        if (i % 2 === 0) {\n          result[pairIndex].white = move;\n        } else {\n          result[pairIndex].black = move;\n        }\n      }\n    }\n    return result;\n  };\n  const movePairs = createMovePairs();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"move-history\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Move History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"move-list\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"White\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: movePairs.map((pair, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"move-number\",\n              children: [index + 1, \".\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"move white-move\",\n              children: formatMove(pair.white)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"move black-move\",\n              children: formatMove(pair.black)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(MoveHistory, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MoveHistory;\nexport default MoveHistory;\nvar _c;\n$RefreshReg$(_c, \"MoveHistory\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","MoveHistory","moves","_s","console","log","formatMove","move","castling","capture","pieceSymbol","getPieceSymbol","piece","from","slice","to","symbols","createMovePairs","movesCopy","result","currentPairIndex","gameLength","Math","ceil","length","i","push","white","black","hasColorProperty","moveNumber","whiteMove","color","pairIndex","floor","movePairs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","pair","index","_c","$RefreshReg$"],"sources":["D:/Code/Chess_Game/chess_frontend/src/components/MoveHistory.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport '../styles/MoveHistory.css';\r\n\r\nconst MoveHistory = ({ moves = [] }) => {\r\n  // Add debug logging to inspect move data\r\n  useEffect(() => {\r\n    console.log(\"Move history data:\", moves);\r\n  }, [moves]);\r\n\r\n  // Format move for display (e.g., \"e2-e4\", \"Nf3\", \"O-O\")\r\n  const formatMove = (move) => {\r\n    if (!move) return '';\r\n    \r\n    // Special case for castling\r\n    if (move.castling) {\r\n      return move.castling === 'kingside' ? 'O-O' : 'O-O-O';\r\n    }\r\n    \r\n    // For captures\r\n    if (move.capture) {\r\n      const pieceSymbol = getPieceSymbol(move.piece);\r\n      return `${pieceSymbol}${move.from.slice(0, 1)}x${move.to}`;\r\n    }\r\n    \r\n    // For regular moves\r\n    const pieceSymbol = getPieceSymbol(move.piece);\r\n    return `${pieceSymbol}${move.from}-${move.to}`;\r\n  };\r\n  \r\n  // Get the symbol for a piece\r\n  const getPieceSymbol = (piece) => {\r\n    if (!piece || piece === 'pawn') return '';\r\n    const symbols = {\r\n      'knight': 'N',\r\n      'bishop': 'B',\r\n      'rook': 'R',\r\n      'queen': 'Q',\r\n      'king': 'K'\r\n    };\r\n    return symbols[piece] || '';\r\n  };\r\n\r\n  // Much more robust approach to pair moves\r\n  const createMovePairs = () => {\r\n    // Make a copy so we don't modify the original\r\n    const movesCopy = [...moves];\r\n    const result = [];\r\n    let currentPairIndex = 0;\r\n    \r\n    // Create empty pairs for each move number\r\n    const gameLength = Math.ceil(movesCopy.length / 2);\r\n    for (let i = 0; i < gameLength; i++) {\r\n      result.push({ white: null, black: null });\r\n    }\r\n    \r\n    // First try to use the color property if available\r\n    let hasColorProperty = movesCopy.length > 0 && 'color' in movesCopy[0];\r\n    \r\n    if (hasColorProperty) {\r\n      // Sort moves by color and move number\r\n      let moveNumber = 1;\r\n      let whiteMove = null;\r\n      \r\n      for (const move of movesCopy) {\r\n        if (move.color === 'white') {\r\n          result[moveNumber - 1].white = move;\r\n          whiteMove = move;\r\n        } else if (move.color === 'black') {\r\n          // If we have a black move, we need to find its pair\r\n          if (whiteMove) {\r\n            result[moveNumber - 1].black = move;\r\n            whiteMove = null;\r\n            moveNumber++;\r\n          } else {\r\n            // Edge case: Black moves first (rare but possible)\r\n            result[moveNumber - 1].black = move;\r\n            moveNumber++;\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      // Fallback to alternating colors if color property isn't available\r\n      for (let i = 0; i < movesCopy.length; i++) {\r\n        const move = movesCopy[i];\r\n        const pairIndex = Math.floor(i / 2);\r\n        \r\n        if (i % 2 === 0) {\r\n          result[pairIndex].white = move;\r\n        } else {\r\n          result[pairIndex].black = move;\r\n        }\r\n      }\r\n    }\r\n    \r\n    return result;\r\n  };\r\n\r\n  const movePairs = createMovePairs();\r\n\r\n  return (\r\n    <div className=\"move-history\">\r\n      <h3>Move History</h3>\r\n      <div className=\"move-list\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>White</th>\r\n              <th>Black</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {movePairs.map((pair, index) => (\r\n              <tr key={index}>\r\n                <td className=\"move-number\">{index + 1}.</td>\r\n                <td className=\"move white-move\">{formatMove(pair.white)}</td>\r\n                <td className=\"move black-move\">{formatMove(pair.black)}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MoveHistory;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}