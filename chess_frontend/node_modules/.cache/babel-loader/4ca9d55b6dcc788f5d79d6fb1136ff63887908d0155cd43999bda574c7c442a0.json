{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sonbx\\\\Chess_Game\\\\chess_frontend\\\\src\\\\components\\\\Piece.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDrag } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Piece = ({\n  piece,\n  position,\n  canDrag\n}) => {\n  _s();\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: 'piece',\n    item: {\n      piece,\n      position\n    },\n    canDrag: () => canDrag,\n    collect: monitor => ({\n      isDragging: !!monitor.isDragging()\n    })\n  });\n\n  // Get piece image path from assets folder\n  const getPieceImage = (type, color) => {\n    // Map piece type to correct prefix\n    const piecePrefix = {\n      'king': 'k',\n      'queen': 'q',\n      'rook': 'r',\n      'bishop': 'b',\n      'knight': 'n',\n      'pawn': 'p'\n    };\n\n    // Map color to correct suffix\n    const colorSuffix = color === 'white' ? 'w' : 'b';\n    return `/assets/${piecePrefix[type.toLowerCase()]}_${colorSuffix}.png`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `piece ${piece.color} ${piece.type} ${isDragging ? 'dragging' : ''}`,\n    ref: canDrag ? drag : null,\n    style: {\n      opacity: isDragging ? 0.5 : 1,\n      backgroundImage: `url(${getPieceImage(piece.type, piece.color)})`,\n      backgroundSize: 'contain',\n      backgroundPosition: 'center',\n      backgroundRepeat: 'no-repeat',\n      width: '100%',\n      height: '100%'\n    },\n    \"data-piece-type\": piece.type,\n    \"data-piece-color\": piece.color\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Piece, \"wuumsFp4qAni9XRJfRhQAZjuD/k=\", false, function () {\n  return [useDrag];\n});\n_c = Piece;\nexport default Piece;\nvar _c;\n$RefreshReg$(_c, \"Piece\");","map":{"version":3,"names":["React","useDrag","jsxDEV","_jsxDEV","Piece","piece","position","canDrag","_s","isDragging","drag","type","item","collect","monitor","getPieceImage","color","piecePrefix","colorSuffix","toLowerCase","className","ref","style","opacity","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sonbx/Chess_Game/chess_frontend/src/components/Piece.jsx"],"sourcesContent":["import React from 'react';\r\nimport { useDrag } from 'react-dnd';\r\n\r\nconst Piece = ({ piece, position, canDrag }) => {\r\n  const [{ isDragging }, drag] = useDrag({\r\n    type: 'piece',\r\n    item: { piece, position },\r\n    canDrag: () => canDrag,\r\n    collect: monitor => ({\r\n      isDragging: !!monitor.isDragging(),\r\n    }),\r\n  });\r\n\r\n  // Get piece image path from assets folder\r\n  const getPieceImage = (type, color) => {\r\n    // Map piece type to correct prefix\r\n    const piecePrefix = {\r\n      'king': 'k',\r\n      'queen': 'q',\r\n      'rook': 'r',\r\n      'bishop': 'b',\r\n      'knight': 'n',\r\n      'pawn': 'p'\r\n    };\r\n    \r\n    // Map color to correct suffix\r\n    const colorSuffix = color === 'white' ? 'w' : 'b';\r\n    \r\n    return `/assets/${piecePrefix[type.toLowerCase()]}_${colorSuffix}.png`;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`piece ${piece.color} ${piece.type} ${isDragging ? 'dragging' : ''}`}\r\n      ref={canDrag ? drag : null}\r\n      style={{ \r\n        opacity: isDragging ? 0.5 : 1,\r\n        backgroundImage: `url(${getPieceImage(piece.type, piece.color)})`,\r\n        backgroundSize: 'contain',\r\n        backgroundPosition: 'center',\r\n        backgroundRepeat: 'no-repeat',\r\n        width: '100%',\r\n        height: '100%'\r\n      }}\r\n      data-piece-type={piece.type}\r\n      data-piece-color={piece.color}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Piece;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,KAAK,GAAGA,CAAC;EAAEC,KAAK;EAAEC,QAAQ;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC9C,MAAM,CAAC;IAAEC;EAAW,CAAC,EAAEC,IAAI,CAAC,GAAGT,OAAO,CAAC;IACrCU,IAAI,EAAE,OAAO;IACbC,IAAI,EAAE;MAAEP,KAAK;MAAEC;IAAS,CAAC;IACzBC,OAAO,EAAEA,CAAA,KAAMA,OAAO;IACtBM,OAAO,EAAEC,OAAO,KAAK;MACnBL,UAAU,EAAE,CAAC,CAACK,OAAO,CAACL,UAAU,CAAC;IACnC,CAAC;EACH,CAAC,CAAC;;EAEF;EACA,MAAMM,aAAa,GAAGA,CAACJ,IAAI,EAAEK,KAAK,KAAK;IACrC;IACA,MAAMC,WAAW,GAAG;MAClB,MAAM,EAAE,GAAG;MACX,OAAO,EAAE,GAAG;MACZ,MAAM,EAAE,GAAG;MACX,QAAQ,EAAE,GAAG;MACb,QAAQ,EAAE,GAAG;MACb,MAAM,EAAE;IACV,CAAC;;IAED;IACA,MAAMC,WAAW,GAAGF,KAAK,KAAK,OAAO,GAAG,GAAG,GAAG,GAAG;IAEjD,OAAO,WAAWC,WAAW,CAACN,IAAI,CAACQ,WAAW,CAAC,CAAC,CAAC,IAAID,WAAW,MAAM;EACxE,CAAC;EAED,oBACEf,OAAA;IACEiB,SAAS,EAAE,SAASf,KAAK,CAACW,KAAK,IAAIX,KAAK,CAACM,IAAI,IAAIF,UAAU,GAAG,UAAU,GAAG,EAAE,EAAG;IAChFY,GAAG,EAAEd,OAAO,GAAGG,IAAI,GAAG,IAAK;IAC3BY,KAAK,EAAE;MACLC,OAAO,EAAEd,UAAU,GAAG,GAAG,GAAG,CAAC;MAC7Be,eAAe,EAAE,OAAOT,aAAa,CAACV,KAAK,CAACM,IAAI,EAAEN,KAAK,CAACW,KAAK,CAAC,GAAG;MACjES,cAAc,EAAE,SAAS;MACzBC,kBAAkB,EAAE,QAAQ;MAC5BC,gBAAgB,EAAE,WAAW;MAC7BC,KAAK,EAAE,MAAM;MACbC,MAAM,EAAE;IACV,CAAE;IACF,mBAAiBxB,KAAK,CAACM,IAAK;IAC5B,oBAAkBN,KAAK,CAACW;EAAM;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/B,CAAC;AAEN,CAAC;AAACzB,EAAA,CA7CIJ,KAAK;EAAA,QACsBH,OAAO;AAAA;AAAAiC,EAAA,GADlC9B,KAAK;AA+CX,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}